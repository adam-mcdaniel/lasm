stack_size 4096



proc start

    define fname, 6
    push 0
    push 't'
    push 'x'
    push 't'
    push '.'
    push 'a'
    st fname

    define input, 256

    refer fname call read

    refer input call cscan

    call resetout

    refer fname call cprint

    push 0
    push '"'
    push ' '
    push 's'
    push 'y'
    push 'a'
    push 's'
    push ' '
    call print

    refer input call cprint


    push 0
    push '"'
    call print
endproc



proc cscan
    define ptr, 1
    define CH, 1
    st ptr

    inc st CH
    ld CH push 10 call nequal
    ld CH push 0 call nequal
    call and
    loop
        ld CH
        ld ptr
        deref_st

        ld ptr push 1 add st ptr
        
        inc st CH
        ld CH push 10 call nequal
        ld CH push 0 call nequal
        call and
    endloop
endproc

proc read
    define fname, 1
    st fname
    ld fname st FSRC
    upio
endproc

proc resetout
    push 0 st FDST
    upio
endproc

proc nl
    push '\n' outc
endproc

proc print
    dup
    loop
        outc
        dup
    endloop
    pop
endproc

proc cprintln
    call cprint
    call nl
endproc

proc cprint
    define ptr, 1
    st ptr

    ld ptr
    deref_ld
    dup
    loop
        outc
        ld ptr
        push 1
        add
        st ptr

        ld ptr
        deref_ld
        dup
    endloop
    pop
endproc




proc greater_eq
    define a, 1
    define b, 1
    st a st b
    ld a ld b
    cmp push 1 add
    call bool
endproc

proc less_eq
    define a, 1
    define b, 1
    define r, 1
    st a st b
    ld a ld b
    cmp
    st r

    push 1
    ld r
    sub
    call bool
endproc

proc greater
    define a, 1
    define b, 1
    st a st b
    
    ld a ld b call greater_eq
    ld a ld b call nequal
    mul
    call bool
endproc

proc less
    define a, 1
    define b, 1
    st a st b

    ld a ld b call less_eq
    ld a ld b call nequal
    mul
    call bool
endproc

proc equal
    sub call not
endproc

proc nequal
    call equal call not
endproc


proc and
    call bool
    call bool
    mul
endproc

proc or
    call bool
    call bool
    add
    call bool
endproc


proc not
    define in, 1
    st in
    push 1
    ld in
    loop
        pop
        push 0
        push 0
    endloop
endproc

proc bool
    define in, 1
    st in
    push 0
    ld in
    loop
        pop
        push 1
        push 0
    endloop
endproc